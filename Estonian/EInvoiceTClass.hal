//from ESTERP build 85331255, compare to ESTERP_EInvoiceTClassDef_EST in build 85331255 and to regular window EInvoiceTClass in later versions
//keep this window def synced with std ERP, ESTERP has own definition
external inner function Boolean IsEnterprise();
external inner function Boolean HasEInvoicing();
external inner function Boolean hasFiscalPrinter();
external inner function Boolean HasMultiCurrency();
external inner function Boolean HasBase2();
remote inner function Boolean TaskExistsRemote(string);
external inner procedure ESTERP_EInvoiceTClassDef_EST();

window EInvoiceTClass:1
  wtag("language","EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,l,v,v2,vm,vm2,vs;
  record EInvoiceBlock EIb; //Bk
  string 255 tstr;
  Integer tilenr;

  BlockLoad(EIb); //Bk
  tstr = "E-teenuste seadistused";
  if (IsStandardProduct) then begin
    tstr = "E-teenuste seadistused";
  end;
  WindowBegin(tstr,EInvoiceTClass,CGSbl,-);
  SetBlid(EInvoiceBlock);
  ContactBackground;
  v = 6; h = 80; h1 = 70; h2 = 290; vs=20;
  if (IsEnterprise) then begin//Bk
    SetWRect(64,80,600,480);
    DynamicWindow;
    Tile(0,30,false,"",Header0);
    tilenr = 1;
    TileButton(tilenr,"E-arve seadistused"); tilenr = tilenr + 1;//Bk
    //Bk - start KB 04.07.2019 //earvete erinouded
    //TileButton(tilenr,"E-arve erinõuded"); tilenr = tilenr + 1; //Bk KB 15.04.2020 - not included into ESTERP
    //Bk - end
    if (HasLocalization("ARG,EST,HRV,HUN,ITA,MEX")) then begin
      TileButton(tilenr,"E-arve teenused"); tilenr = tilenr + 1;//Bk
    end;
    if (HasLocalization("SVN")) then begin
      TileButton(tilenr,"Fiskaalarved"); tilenr = tilenr + 1;
    end;
    if (HasEInvoicing and HasLocalization("HUN")==false) then begin
      //TileButton(tilenr,"E-tasumised"); tilenr = tilenr + 1;//Bk
    end;
    if (HasLocalization("EST")==false) then begin//Bk
      TileButton(tilenr,"Teenuse hetkeseis"); tilenr = tilenr + 1;
    end;
    //Bk - start KB 06.06.2017
    if (HasLocalization("EST")) then begin
      TileButton(tilenr,"Kuluaruanne"); tilenr = tilenr + 1;
      TileButton(tilenr,"Muud teenused"); tilenr = tilenr + 1;
    end;
    //Bk - end
    tilenr = 1;
/*//Bk
    Tile(tilenr,320,false,tilenr,StopReason);  tilenr = tilenr + 1;
    ButtonFrame(h,v=20,390,4,"Vaikimisi seadistused elektroonsele andmevahetusele");
    RadioButton(h,v,0,0,"Ei saada E-Arveid",DefaultEBehave);
    RadioButton(h,v+=16,1,0,"Saada kõik, mida saab saata; normaalne printimine",DefaultEBehave);
    RadioButton(h,v+=16,2,0,"Saada kõik, mida saab saata; saadetud arvete väljatrükil Koopia",DefaultEBehave);
    RadioButton(h,v+=16,3,0,"Saada kõik",DefaultEBehave);
    ButtonFrame(h,vm=(v+=60),180,2,"E-Arvete saatmine");
    RadioButton(h,v,0,0,"Vaikimisi",OutEInvoices);
    RadioButton(h,v+=16,1,0,"Aktiveeritud",OutEInvoices);
    if (HasEInvoicing) then begin
      ButtonFrame(h,v+=40,180,2,"E-Arvete vastuvõtmine");
      RadioButton(h,v,0,0,"Vaikimisi",RcvEInvoices);
      RadioButton(h,v+=16,1,0,"Aktiveeritud",RcvEInvoices);
      ButtonFrame(h,v+=40,180,2,"Saada elektooniline KM-deklaratsioon");
      RadioButton(h,v,0,0,"Vaikimisi",OutEVat);
      RadioButton(h,v+=16,1,0,"Aktiveeritud",OutEVat);
      ButtonFrame(h2,v=vm,180,2,"E-Tasumiste saatmine");
      RadioButton(h2,v,0,0,"Vaikimisi",OutEPayments);
      RadioButton(h2,v+=16,1,0,"Aktiveeritud",OutEPayments);
      ButtonFrame(h2,v+=40,180,2,"Otsekorraldusnõuete saatmine");
      RadioButton(h2,v,0,0,"Vaikimisi",OutEDirDebt);
      RadioButton(h2,v+=16,1,0,"Aktiveeritud",OutEDirDebt);
    end;
    CheckBox(h,v+=80,0,"Elektroonne andmevahetus peatatud",StopEInvoices);
    EditField(h,v+=20, -20,"Põhjus",Normal,StopReason,false,0);
*/ //Bk
    Tile(tilenr,320,true,tilenr,Header0);  tilenr = tilenr + 1;
/* //Bk
    EditField(h,v=10, 50,"Päis",Normal,Header0,false,LTxtSClass);
  //  EditField(h,v+=20, -40,"",Normal,Header1,false,0);
    EditField(h,v+=20, 50,"Jalus",Normal,Footer0,false,LTxtSClass);
    EditField(h,v+=20, 50,"Faktooring",Normal,Footer2,false,LTxtSClass);
    EditField(h,vm=(v+=20),80,"Print. blankett",Normal,PrintLayout,false,0);
    if (HasLocalization("LVA")) then begin
      EditField(h,vm=(v+=20),80,"Supp. Inv. Partner",Normal,SuppInvoicePartner,false,0);
    end;
    if (HasLocalization("SVN")) then begin
      EditField(h,v+=20,150,"Certificate",Normal,Certificate,false,PastePictureName);
      EditField(h,v+=20,150,"Private Key",Normal,PrivateKey,false,PastePictureName);
      EditFieldTL(h,vm=(v+=20),150,"Passphrase",M4Star,Normal,200,Passphrase,false,0);
    end;
*/ //Bk
    CheckBox(h,v=6,0,"Testi E-arveid (ainult testandmebaasis)",TestFlag);
/* //Bk
    CheckBox(180,v+=16,0,"Kasuta OCR viiteid",UseOCRReference);
    CheckBox(180,v+=16,0,"Saada sularahaarveid e-arvetena",CashNotes);
*/ //Bk
    CheckBox(h,v+=16,0,"Jäta vahele artiklikoodita read E-arvel",NoLineswoItemonEInv);
    if (HasLocalization("FIN,NOR,SWE")==false) then begin
      CheckBox(h,v+=16,0,"E-arved PDF failidega",AttachPDFtoElectronicInvoice);
    end;
    if (HasLocalization("FIN,NOR,SWE")) then begin
      CheckBox(180,v+=16,0,"E-arve finvoice arvega kaasa",AttachFInvoicetoEInv);
      vm = vm + 16;
    end;
    //Bk - start KB 19.02.2020
    ButtonFrame(h,v=v+50,390,4,"Vastuvõtu kanal (kui kontakti kaardil on määratud 'vaikimisi')");
    if (HasLocalization("EST")) then begin
      RadioButton(h,v,kEInvoiceRcvPreferenceElectronic,0,"E-arve",RcvInvoicePref);
      RadioButton(h,v+=16,kEInvoiceRcvPreferenceInternetBank,0,"Internetipank",RcvInvoicePref);
    end;
    if (HasLocalization("LAT,EST")) then begin
      RadioButton(h,v+=16,kEInvoiceRcvPreferenceDefault,0,"Eelistus operaatori keskkonnast",RcvInvoicePref);//operator decides preference
      RadioButton(h,v+=16,kEInvoiceRcvPreferenceEMail,0,"E-mail",RcvInvoicePref);
    end;
    //RadioButton(h,v+=16,kEInvoiceRcvPreferenceElectronic,0,"E-arve portaali",RcvInvoicePref);
    //Bk - end
    if (HasLocalization("LAT")) then begin
      RadioButton(h,v+=16,kEInvoiceRcvPreferenceEMail,0,"E-mail",RcvInvoicePref);
      RadioButton(h,v+=16,kEInvoiceRcvPreferencePaper,0,"Paberarve",RcvInvoicePref);
    end else begin
      if (HasLocalization("FIN,NOR,SWE")) then begin
        RadioButton(h,v+=16,kEInvoiceRcvPreferenceEMail,0,"E-mail",RcvInvoicePref);
      end else begin
        RadioButton(h,v+=16,kEInvoiceRcvPreferencePaper,0,"Paberarve",RcvInvoicePref);
      end;
    end;
    if (HasLocalization("EST")) then begin
      //Bk - start KB 19.02.2020
      //RadioButton(h,v+=16,kEInvoiceRcvPreferenceEMail,0,"E-mail",RcvInvoicePref);
      //RadioButton(h,v+=16,kEInvoiceRcvPreferenceInternetBank,0,"Internetipank",RcvInvoicePref);
      //Bk - end
    end;
    RadioButton(h,v+=16,kEInvoiceRcvPreferenceNone,0,"Ei saada e-arveid",RcvInvoicePref);
    EndFrame;
    if (HasLocalization("ITA,SWE")) then begin
      ButtonFrame(h,vm2=(v+=40),180,3,"Registreerimine partneri juures");
      RadioButton(h,v,0,0,"Ei ole registreeritud",RegAtPartner);
      RadioButton(h,v+=16,1,0,"Registreerimisel",RegAtPartner);
      RadioButton(h,v+=16,2,0,"Registreeritud",RegAtPartner);
      if (HasLocalization("ITA")) then begin
        EditField(h2+30,vm2,150,"ID",ViewOnly,EInvoiceUser,false,0);
      end;
    end;
    if (HasEInvoicing) then begin
      if (HasLocalization("SVN")) then begin
        ButtonFrame(h,v+=40,180,2,"Versioon");
        RadioButton(h,v,0,0,"1.5",EInvoiceVersion);
        RadioButton(h,v+=16,1,0,"1.6",EInvoiceVersion);
        CheckBox(h,v+=24,0,"Portaali ootel staatuses",SaveXMLFlag);
      end else begin
        //ButtonFrame(h,v+=40,390,2,"Tarnija E-arve ridade ülekanne ostuarvele");//Bk
        //RadioButton(h,v,0,0,"Ühe summeeritud reana tarnija kulukontoga",VEIVRowTransfer);//Bk
        //RadioButton(h,v+=16,1,0,"Iga rida eraldi",VEIVRowTransfer);//Bk
        if (HasLocalization("EST")) then begin//Bk
          ButtonFrame(h,v+=50,180,1,"E-arve saatmine");//Bk
          CheckBox(h,v,0,"Portaali ootel staatuses",ExportIVSendPlainINasStockIN);//Bk, reuse
          ButtonFrame(h+200,v,190,1,"E-arve vastuvõtmine");//Bk
          CheckBox(h+200,v,0,"Ainult kinnitatud",DblAcceptEPay);//Bk, reuse
        end;//Bk
      //Bk start
        ButtonFrame(h,v+=50,390,2,"Tarnija E-arve ridade ülekanne ostuarvele");
        RadioButton(h,v,0,0,"Ühe summeeritud reana tarnija kulukontoga",VEIVRowTransfer);
        RadioButton(h,v+=16,1,0,"Iga rida eraldi",VEIVRowTransfer);
        ButtonFrame(h,v+=50,390,2,"Tarnija E-arve ridade ülekanne kulutusele");
        RadioButton(h,v,0,0,"Summeeritud kulukonto/objekt lõikes",VEIVRowToExpMethod);
        RadioButton(h,v+=16,1,0,"Iga rida eraldi",VEIVRowToExpMethod);
        CheckBox(h,v+=26,0,"Ära nõua KM-koodi tarnija e-arve ridadel",NoVATOnVEIVVcRow);
        if (HasLocalization("EST")) then begin
          CheckBox(h,v+=16,0,"Näita ostuarvel tarnija e-arve rea kommentaare",VEIVRowComment);
          CheckBox(h,v+=16,0,"Näita kulutusel tarnija e-arve rea kommentaare",VEIVRowCommToExp); //KB 12.02.2019
          CheckBox(h,v+=16,0,"Tarnija e-arve vastuvõtmine kõikide manustega",IncAllAttach);
          CheckBox(h,v+=16,0,"Tarnija e-arve automaatne kinnitamine",AutoVIfromVEIV);
          //bk - start NK 30.11.2018
          CheckBox(h,v+=16,0,"Lisa ostuarve ja kulutuse koostamisel konto objekt",UseAccObject);
          //bk - end
          //Bk - start KB 21.01.2019
          CheckBox(h,v+=16,0,"Saada algandmeid e-arvete keskkonda",BaseDataSend);
          //Bk - end
          EditField(h+32,v+=32,-40,"Süsteemi teade",Normal,ServiceMessage,false,0);
          CheckBox(h,v+=vs,0,"Elektroonne andmevahetus peatatud",StopEInvoices);
        end;
      //Bk end
      end;
    end;
    //Bk - start KB 04.07.2019 //earvete erinouded
    /* KB 15.04.2020 - not included into ESTERP
    Tile(tilenr,320,false,tilenr,Header0);  tilenr = tilenr + 1;
    CheckBox(h,v=6,0,"Kasuta suurhaiglate spetsiifilisi e-arve välju",UseMedicalElems);
    CheckBox(h,v+=vs,0,"Kasuta töötukassa spetsiifilisi e-arve välju",UseTootKassaElems);
    */
    //Bk - end
/* //Bk
    if (HasLocalization("EST")) then begin
//    ButtonFrame(h2,v=vm+50,180,2,"Electronic Invoices");//##cc
      RadioButton(h2,v,0,0,"Kõigile klientidele",WhomEInvoices); //##cc
//    RadioButton(h,v+=16,1,0,"Ainult määratud klientidele",WhomEInvoices); //##cc
    end;
    ButtonFrame(h2,v=vm+50,180,2,"Paberarve postitus");
    RadioButton(h2,v,0,0,"Kiir",Postage);
    RadioButton(h2,v+=16,1,0,"Tava",Postage);
*/ //Bk
  /*
    Tile(2,150,false,"2",DblAcceptMinSumEPay);  tilenr = tilenr + 1;
    v = 6;
  no support
    ButtonFrame(h,v+=40,350,3,"Dbl. Accepting of Payments");
    RadioButton(h,v,0,0,"Not Required",DblAcceptEPay);
    RadioButton(h,v+=16,1,0,"Required for all Payments",DblAcceptEPay);
    RadioButton(h,v+=16,2,0,"Required for Payments above: ",DblAcceptEPay);
    EditField(h2+50,v,80,"",Normal,DblAcceptMinSumEPay,false,0);
  */
    if (HasLocalization("HRV,ITA")) then begin
      Tile(tilenr,300,false,tilenr,EInvoiceUser);  tilenr = tilenr + 1;
      EditField(h,v=6,150,"ID",Normal,EInvoiceUser,false,0);
      if (HasLocalization("HRV")) then begin
        EditField(h+250,v,150,"Pasword",Normal,EInvoicePassword,false,0);
      end;
//      EditField(h,v+=vs,-20,"Key",Normal,Certificate,false,0);
      if (HasLocalization("ITA")) then begin
        EditField(h,v+=vs,-160,"(Live) Host",Normal,LiveHostName,false,0);
        EditField(-100,v,-20,"Port",Normal,LivePort,false,0);
      end;
    end;
    if (HasLocalization("HUN")) then begin
      Tile(tilenr,300,false,tilenr,Certificate);  tilenr = tilenr + 1;
      EditField(h,v=6,150,"User",Normal,EInvoiceUser,false,0);
      EditField(h,v+=vs,150,"Pasword",Normal,EInvoicePassword,false,0);
      EditField(h,v+=vs,250,"Sign Key",Normal,Passphrase,false,0);
      EditField(h,v+=vs,150,"Exchange Key",Normal,PrivateKey,false,0);
      EditField(h,v+=vs,50,"GMT Offset",Normal,GMTOffset,true,0);
      EditField(h,v+=vs,-160,"(Live) Host",Normal,LiveHostName,false,0);
      EditField(-100,v,-20,"Port",Normal,LivePort,false,0);
    end;
    if (HasLocalization("ARG")) then begin
      Tile(tilenr,300,false,tilenr,Certificate);  tilenr = tilenr + 1;
      CheckBox(h=150,v=10,0,"Saada AFIP arved elektrooniliselt",OutArgEInvoices);
//      CheckBox(h,v+=16,0,"Anna ametl. seerianumber automaatselt",AssignOfficialSerNr);
      EditField(h,v+=vs,250,"",Normal,Certificate,false,PastePictureName);
      EditField(h,v+=vs,250,"",Normal,PrivateKey,false,PastePictureName);
      EditField(h,v+=vs,150,"Salasõna",Normal,Passphrase,false,0);
      EditField(h,v+=vs,50,"GMT nihe",Normal,GMTOffset,true,0);
      EditField(h,v+=vs,150,"CAEA",ViewOnly,CAEA,false,0);
      HalPushButton(h+230,v,h+230+90,v+20,"EInvoiceTClassRequestCAEA","Küsi CAEA");
      EditField(h,v+=vs,70,"CAEA algus",ViewOnly,CAEAStartDate,false,0);
      EditField(h+150,v,70,"CAEA lõpp",ViewOnly,CAEAExpiryDate,false,0);
      EditField(h,v+=vs,150,"Viimane CAEA",ViewOnly,LastFortnightCAEA,false,0);
      EditField(h,v+=vs,70,"Viimase CAEA algus",ViewOnly,LastFortnightCAEAStartDate,false,0);
      EditField(h+150,v,70,"CAEA lõpukp.",ViewOnly,LastFortnightCAEAExpiryDate,false,0);
      EditField(h,v+=vs,150,"Eelmine CAEA",ViewOnly,ScdLastFortnightCAEA,false,0);
      EditField(h,v+=vs,70,"Eelmise CAEA algus",ViewOnly,ScdLastFortnightCAEAStartDate,false,0);
      EditField(h+150,v,70,"CAEA lõpukp.",ViewOnly,ScdLastFortnightCAEAExpiryDate,false,0);
      EditField(h,v+=vs,70,"Tühjenda sisenemise pilet",Normal,ClearLoginTicketTime,false,PasteCurTime);
      CheckBox(h,v+=vs,0,"Luba ekspordi arvete saatmist",SendExportIV);
      CheckBox(h,v+=16,0,"Isearveldus",ArgSelfBilling);
      CheckBox(h,v+=16,0,"Saada tavalised artiklid laoartiklitena eksportarvetel",ExportIVSendPlainINasStockIN);
      CheckBox(h,v+=16,0,"Kohalik arve baasis 1",DomesticInvoiceinBase1);
    end;
    if (HasLocalization("MEX")) then begin
      Tile(tilenr,250,false,tilenr,Certificate);  tilenr = tilenr + 1;
      EditField(h=110,v=20,-20,"Sertifikaadi nr.",Normal,CertificateNr,false,0);
      EditField(h,v+=vs,-20,"Sertifikaat",Normal,Certificate,false,PastePictureName);
      EditField(h,v+=vs,-20,"Võti",Normal,PrivateKey,false,PastePictureName);
      EditField(h,v+=vs,-20,"Paroolifraas",Normal,Passphrase,false,0);
      EditField(h,v+=vs,-20,"E-arvete säilitamine",Normal,EInvoiceStoragePath,false,0);
      ButtonFrame(h,v+=45,100,3,"E-arve tüüp");
      RadioButton(h,v,3,0,"PAC",MexEInvType);
      RadioButton(h,v+=16,0,0,"CFDI (3.3)",MexEInvType);
//      RadioButton(h,v+=16,1,0,"CFD",MexEInvType);
      RadioButton(h,v+=16,2,0,"EDX",MexEInvType);
    end;
    if (HasLocalization("HRV")) then begin
      Tile(tilenr,310,false,tilenr,-);  tilenr = tilenr + 1;
      EditField(h=110,v=20,-20,"Sertifikaat",Normal,Certificate,false,PastePictureName);
      EditField(h,v+=vs,-20,"Võti",Normal,PrivateKey,false,PastePictureName);
      EditFieldTL(h,v+=vs,-20,"Salasõna",M4Star,Normal,200,Passphrase,false,0);
      EditField(h,v+=vs,-160,"(Live) Host",Normal,LiveHostName,false,0);
      EditField(-100,v,-20,"Port",Normal,LivePort,false,0);
      EditField(h,v+=vs,-160,"Teekond",Normal,LivePath,false,0);
      EditField(h,v+=vs,-160,"(Test) Host",Normal,TestHostName,false,0);
      EditField(-100,v,-20,"Port",Normal,TestPort,false,0);
      EditField(h,v+=vs,-160,"Teekond",Normal,TestPath,false,0);
      CheckBox(h,v+=vs,0,"Ühendu testserveriga",FiscInvTestFlag);
      CheckBox(h,v+=vs,0,"Salvesta XML saatmise asemel",SaveXMLFlag);
      if (HasLocalization("HRV")) then begin
        EditField(h=200,v+=vs,100,"Vaikimisi XML skeem (#S/L# arved)",Normal,IVVcDefaultXML,false,XMLExportSClass);
        EditField(h=200,v+=vs,100,"Vaikimisi XML skeem (POS arved)",Normal,IVCashVcDefaultXML,false,XMLExportSClass);
        EditField(h=200,v+=vs,100,"Vaikimisi XML skeem (Rest. tell.)",Normal,RestAccVcDefaultXML,false,XMLExportSClass);
      end;
    end;
    if (HasLocalization("SVN")) then begin
      Tile(tilenr,310,false,tilenr,-);  tilenr = tilenr + 1;
      EditField(h=110,v=20,-20,"Sertifikaat",Normal,FiscInvCertificate,false,PastePictureName);
      EditField(h,v+=vs,-20,"Võti",Normal,FiscInvPrivateKey,false,PastePictureName);
      EditFieldTL(h,v+=vs,-20,"Salasõna",M4Star,Normal,200,FiscInvPassphrase,false,0);
      EditField(h,v+=vs,-160,"(Live) Host",Normal,FiscInvLiveHostName,false,0);
      EditField(-100,v,-20,"Port",Normal,FiscInvLivePort,false,0);
      EditField(h,v+=vs,-160,"Teekond",Normal,FiscInvLivePath,false,0);
      EditField(h,v+=vs,-160,"(Test) Host",Normal,FiscInvTestHostName,false,0);
      EditField(-100,v,-20,"Port",Normal,FiscInvTestPort,false,0);
      EditField(h,v+=vs,-160,"Teekond",Normal,FiscInvTestPath,false,0);
      CheckBox(h,v+=vs,0,"Ühenda testserveriga",FiscInvTestFlag);
      CheckBox(h,v+=vs,0,"Salvesta XML",FiscInvSaveXMLFlag);
    end;
//Bk - start, lots of changes compare to erp
    if (HasLocalization("EST,LTU,LVA")) then begin
      Tile(tilenr,310,false,tilenr,CntOutEstEInvoices);  tilenr = tilenr + 1;
      h1 = 70; h2 = 295; h3 = 400; l = 60;
      ButtonFrame(h1-10,v=21,413,5,"E-arvete saatmine");
      CheckBox(h1,v,0,"Teenus aktiveeritud",OutEstEInvoices);
      EditField(h3,v,l,"Päringus saadetavate e-arvete arv",Normal,CntOutEstEInvoices,false,0);
      CheckBox(h1,v+=vs,0,"Peata ajutiselt teenus",StopOutEstEInvoices);
      EditField(h3-90,v+=vs,l,"Viimase päringu kuupäev",ViewOnly,LastOutEstEInvoicesDate,false,0);
      EditField(h3,v,l,"kell",ViewOnly,LastOutEstEInvoicesTime,false,0);
      EndFrame;
      ButtonFrame(h1-10,v+=44,413,2,"E-arvete staatuse päring");
      CheckBox(h1,v,0,"Peata ajutiselt teenus",StopOutEstEInvStatus);
      EditField(h3-90,v+=vs,l,"Viimase päringu kuupäev",ViewOnly,LastOutEstEInvStatusDate,false,0);
      EditField(h3,v,l,"kell",ViewOnly,LastOutEstEInvStatusTime,false,0);
      EndFrame;
      ButtonFrame(h1-10,v+=44,413,5,"E-arvete vastuvõtmine (müügiarved)");
      CheckBox(h1,v,0,"Teenus aktiveeritud",InIVEstEInvoices);
      CheckBox(h1,v+=vs,0,"Peata ajutiselt teenus",StopInIVEstEInvoices);
      CheckBox(h1,v+=vs,0,"E-arvete vastuvõtmine ilma pdf failideta",StopInIVEstEInvPdf);
      EditField(h3,v+=vs,l,"E-arvete pdf vastuvõtmine, kirjete arv (1 - 10)",Normal,CntInIVEstEInvPdf,true,0);
      EditField(h3,v+=vs,l,"Viimane pdf päring (Müügi e-arve)",Normal,LastInIVEstEInvSerial,false,0);
      EditField(h3-90,v+=vs,l,"Viimase päringu kuupäev",ViewOnly,LastInIVEstDate,false,0);
      EditField(h3,v,l,"kell",ViewOnly,LastInIVEstTime,false,0);
      EditField(h3-90,v+=vs,l,"Viimane sissetulnud e-arve",Normal,LastInIVEstEInvoicesDate,false,0);
      EditField(h3,v,l,"kell",Normal,LastInIVEstEInvoicesTime,false,0);
      EndFrame;
      ButtonFrame(h1-10,v+=44,413,5,"Tarnija e-arvete vastuvõtmine");
      CheckBox(h1,v,0,"Teenus aktiveeritud",InEstEInvoices);
      CheckBox(h1,v+=vs,0,"Peata ajutiselt teenus",StopInEstEInvoices);
      CheckBox(h1,v+=vs,0,"E-arvete vastuvõtmine ilma pdf failideta",StopInEstEInvPdf);
      EditField(h3,v+=vs,l,"E-arvete pdf vastuvõtmine, kirjete arv (1 - 10)",Normal,CntInEstEInvPdf,true,0);
      EditField(h3,v+=vs,l,"Viimane pdf päring (Tarnija e-arve)",Normal,LastInEstEInvStatusSerial,false,0);
      EditField(h3-90,v+=vs,l,"Viimase päringu kuupäev",ViewOnly,LastInEstDate,false,0);
      EditField(h3,v,l,"kell",ViewOnly,LastInEstTime,false,0);
      EditField(h3-90,v+=vs,l,"Viimane sissetulnud hankija e-arve",Normal,LastInEstEInvoicesDate,false,0);
      EditField(h3,v,l,"kell",Normal,LastInEstEInvoicesTime,false,0);
      EndFrame;
      CheckBox(h1,v+=26,0,"Aktiveeri “debug” reziim",DebugFlag);
      EditField(h1+30,v+=32,-40,"E-arve konto",Normal,PrivateKey,false,0);
      EditField(h1+30,v+=vs,-40,"Süsteemi teade",Normal,ServiceMessage,false,0);
      v = v + 2 * vs;
      HalPushButton(300,v   ,430,v+20,"OpenRegWindowEInv","Aktiveeri / Muuda");
    end;
//Bk - end
/* //Bk
    if (HasEInvoicing and HasLocalization("HUN")==false) then begin
      Tile(tilenr,250,false,tilenr,EPayCertificate);  tilenr = tilenr + 1;
      EditField(h=120,v=20,-20,"",Normal,EPayCertificate,false,PastePictureName);
      EditField(h,v+=vs,-20,"",Normal,EPayPrivateKey,false,PastePictureName);
      EditField(h,v+=vs,-20,"Salasõna",Normal,EPayPassphrase,false,0);
      EditField(h,v+=vs,-20,"Vastuvõtja",Normal,EPayRecipient,false,0);
      EditField(h,v+=vs,-20,"Vastuvõtja sertifikaat",Normal,EPayRecipientCertificate,false,0);
      EditField(h,v+=vs,-20,"Allkirjastaja roll",Normal,EPaySignerRole,false,0);
      EditField(h,v+=vs,-20,"Kliendi sertifikaat",Normal,EPayRequestCertificate,false,PastePictureName);
      EditField(h,v+=vs,-20,"Kliendi salajane võti",Normal,EPayRequestPrivateKey,false,PastePictureName);
    end;
*/ //Bk
//Bk - start: ts 2018/07
    if (HasLocalization("EST")) then begin
      Tile(tilenr,310,true,tilenr,-);  tilenr = tilenr + 1;
      h1 = 70; h2 = 295; h3 = 400; l = 60;
      ButtonFrame(h1-10,v=21,413,5,"Kuluaruannete vastuvõtmine");
      CheckBox(h1,v,0,"Teenus aktiveeritud",InEstExp);
      CheckBox(h1,v+=vs,0,"Peata ajutiselt teenus",StopInEstExp);
      CheckBox(h1,v+=vs,0,"Kulutuste vastuvõtmine ilma pdf failideta",StopInEstExpPdf);
      CheckBox(h1,v+=vs,0,"Võta vastu kinnitamata kuluaruanded",EExpStatusMode);
      //EditField(h3,v+=vs,l,"Kulutuste pdf vastuvõtmine, kirjete arv (1 - 10)",Normal,CntInEstExpPdf,true,0);
      EditField(h3,v+=vs,l,"Viimane pdf päring  (Kulutuse nr)",ViewOnly,LastInEstExpSerial2,false,0);
      EditField(h3,v+=vs,l,"Viimane pdf päring (Kulutuste kuluaruanne)",Normal,LastInEstExpSerial,false,0);
      EditField(h3-90,v+=vs,l,"Viimase päringu kuupäev",ViewOnly,LastInEstExpReqDate,false,0);
      EditField(h3,v,l,"kell",ViewOnly,LastInEstExpReqTime,false,0);
      EditField(h3-90,v+=vs,l,"Viimane sissetulnud kuluaruanne",Normal,LastInEstExpDate,false,0);
      EditField(h3,v,l,"kell",Normal,LastInEstExpTime,false,0);
      EndFrame;
      v = v + 10;
      ButtonFrame(h1-10,v+=40,413,2,"Koonda kuluaruande read "); 
      RadioButton(h,v,0,0,"Iga rida eraldi",EExpRowPackMethod);
      CheckBox(h1+30,v+=vs,0,"Näita Kulutuse real kviitungi kirjeldust (iga rida eraldi)",EExpRowCommToExp);
      RadioButton(h,v+=vs,1,0,"Summeeritud kulukonto/objekt/KMkood lõikes",EExpRowPackMethod);
      EndFrame;
      v = v + vs;
      CheckBox(h1,v+=26,0,"Aktiveeri “debug” reziim",DebugFlag); 
      EditField(h1+30,v+=32,-40,"E-arve konto",Normal,PrivateKey,false,0);
      EditField(h1+30,v+=vs,-40,"Süsteemi teade",Normal,ServiceMessage,false,0);
      v = v + 2 * vs;
      HalPushButton(300,v   ,430,v+20,"OpenRegWindowEInv","Aktiveeri / Muuda");
    end;
//Bk - end
    if (HasLocalization("EST") == false) then begin//Bk
      Tile(tilenr,250,false,tilenr,-);  tilenr = tilenr + 1;
      v = 6;
      if (TaskExistsRemote("SendEInvoice")) then begin
        tstr = "Käivitatud";
      end else begin
        tstr = "Peatatud";
      end;
      StaticText(30,v2=25,tstr,false);
      HalPushButton(h+=100,v,h+200,v+20,"RestartSendEInvoice","Saada e-arved");
      if (TaskExistsRemote("ReceiveEInvoice")) then begin
        tstr = "Käivitatud";
      end else begin
        tstr = "Peatatud";
      end;
      StaticText(30,v2+=25,tstr,false);
      HalPushButton(h,v+=25,h+200,v+20,"RestartReceiveEInvoice","Võta vastu e-arved");
      if (TaskExistsRemote("SendEPayment")) then begin
        tstr = "Käivitatud";
      end else begin
        tstr = "Peatatud";
      end;
      StaticText(30,v2+=25,tstr,false);
      HalPushButton(h,v+=25,h+200,v+20,"RestartSendEPayment","Saada e-tasumised");
      if (TaskExistsRemote("SendEDirectDebit")) then begin
        tstr = "Käivitatud";
      end else begin
        tstr = "Peatatud";
      end;
      StaticText(30,v2+=25,tstr,false);
      HalPushButton(h,v+=25,h+200,v+20,"RestartSendEDirectDebit","Saada otsekorraldus");
      if (TaskExistsRemote("GetEVATDeclarationStatuses")) then begin
        tstr = "Käivitatud";
      end else begin
        tstr = "Peatatud";
      end;
      StaticText(30,v2+=25,tstr,false);
      HalPushButton(h,v+=25,h+200,v+20,"RestartGetEVATDeclarationStatuses","Saada elektrooniline KM deklaratsioon");
    end;
//Bk - start: TS 2017/09
    Tile(tilenr,310,false,tilenr,-);  tilenr = tilenr + 1; 
    h1 = 70; h2 = 295; h3 = 400; l = 70;
    v = 26; //Bk KB 02.03.2020 - for ESTERP
/* //Bk KB 02.03.2020 - not in ESTERP yet
    CheckBox(h1,v=26,0,"Pensioni liitumispäring",Service4Flag);
    if (EIb.Service4Flag!=1) then begin
      HalPushButton(300,v,430,v+20,"SendActivationRequestEInv4","Aktiveeri");
    end else begin
      HalPushButton(300,v,430,v+20,"StopServiceRequestEInv4","Deaktiveeri");
    end;
    CheckBox(h1,v+=32,0,"Äriregistri päring",Service5Flag);
    if (EIb.Service5Flag!=1) then begin
      HalPushButton(300,v,430,v+20,"SendActivationRequestEInv5","Aktiveeri");
    end else begin
      HalPushButton(300,v,430,v+20,"StopServiceRequestEInv5","Deaktiveeri");
    end;
*/
    //cust - start KB 29.03.2021 enabled for customer to replace std erp functionality
    CheckBox(h1,v+=32,0,"Valuutakursside päring",Service6Flag);
    if (EIb.Service6Flag!=1) then begin
      HalPushButton(300,v,430,v+20,"SendActivationRequestEInv6","Aktiveeri");
    end else begin
      HalPushButton(300,v,430,v+20,"StopServiceRequestEInv6","Deaktiveeri");
    end;
    //cust - end
/*
    //Bk - start: ts 2019/07
    CheckBox(h1,v+=32,0,"Smaily",Service40Flag);
    if (EIb.Service40Flag!=1) then begin
      HalPushButton(300,v,430,v+20,"SendActivationRequestEInv40","Aktiveeri");
    end else begin
      HalPushButton(300,v,430,v+20,"StopServiceRequestEInv40","Deaktiveeri");
    end;
    //Bk - end
*/
    //Bk - start KB 15.03.2018 tsekk.ee
    CheckBox(h1,v+=32,0,"Costpocket",TsekkActivFlag);
    if (EIb.TsekkActivFlag != 1) then begin
      HalPushButton(300,v,430,v+20,"OpenTermsWindowTsekk","Aktiveeri");
    end else begin
      HalPushButton(300,v,430,v+20,"OpenDeActivTsekk","Deaktiveeri");
      HalPushButton(450,v,500,v+20,"SendLogInReqTsekk","Sisene");
    end;
    //Bk - end
/* //Bk KB 02.03.2020 - not in ESTERP yet
    //Bk - KB 11.04.2018 Telema API
    CheckBox(h1,v+=32,0,"Telema REST API",Service15Flag);
    if (EIb.Service15Flag != 1) then begin
      HalPushButton(300,v,430,v+20,"ActivateServiceRequest15","Aktiveeri");
    end else begin
      HalPushButton(300,v,430,v+20,"StopServiceRequest15","Deaktiveeri");
    end;
    //Bk end
    //Bk - start KB 08.03.2019 //pangaliidestus
    CheckBox(h1,v+=32,0,"Pangaliidestus",Service20Flag);
    if (EIb.Service20Flag != 1) then begin
      HalPushButton(300,v,430,v+20,"ActivateServiceRequest20","Aktiveeri");
    end else begin
      HalPushButton(300,v,430,v+20,"StopServiceRequest20","Deaktiveeri");
    end;
    //Bk - end
    //Bk - start KB 25.06.2019 //scoro liidestus
    CheckBox(h1,v+=32,0,"Scoro",Service30Flag);
    if (EIb.Service30Flag != 1) then begin
      HalPushButton(300,v,430,v+20,"OpenTermsWindowScoro","Aktiveeri");
    end else begin
      HalPushButton(300,v,430,v+20,"StopServiceRequest30","Deaktiveeri");
    end;
    //Bk - end
    //Bk - start NK 25.06.2019 //scoro liidestus
    CheckBox(h1,v+=32,0,"Postiteenused",Service50Flag);
    if (EIb.Service50Flag!=1) then begin
      HalPushButton(300,v,430,v+20,"OpenBKPostService","Aktiveeri");
    end else begin
      HalPushButton(300,v,430,v+20,"OpenBKPostService","Muuda");
    end;
    //Bk - end
*/
    EditField(h1+30,v+=52,-40,"Süsteemi teade",Normal,ServiceMessage,false,0);
//Bk - end, lots of changes compare to erp
/* //Bk
    if (HasLocalization("EST,LTU,LVA")) then begin
      SpecialMenu("Aktiveeri e-teenus",' ',0,"EstEInvoiceRegisterTsm");
      SpecialMenu("Sulge e-teenus",' ',0,"EstEInvoiceCloseTsm");
    end;
*/
    if (HasLocalization("SWE")) then begin
      SpecialMenu("Registreeri E-arved",' ',0,"EInvoiceRegisterTsm");
    end;
    if (HasLocalization("ARG")) then begin
      SpecialMenu("Tühjenda sisenemise pileti aeg ja kuupäev",' ',0,"EInvoiceClearLoginTicketTsm");
      SpecialMenu("Test Communication with AFIP E-inv. Server",' ',0,"EInvoiceTestCommunicationTsm");
    end;
  end else begin
    if (HasLocalization("ARG,MEX")) then begin
      SetWRect(64,80,550,480);
      Tile(0,30,false,"",Header0);
      tilenr = 1;
      TileButton(tilenr,"Activation"); tilenr = tilenr + 1;
      TileButton(tilenr,"E-Invoices Misc"); tilenr = tilenr + 1;
      tilenr = 1;
      Tile(tilenr,300,false,tilenr,-);  tilenr = tilenr + 1;
    end else begin
      SetWRect(64,80,420,480);
    end;
    if (HasFiscalPrinter and HasLocalization("SVN")) then begin
      EditField(h=120,vm=(v=6),-20,"Sertifikaat",Normal,FiscInvCertificate,false,PastePictureName);
      EditField(h,v+=vs,-20,"LAT,EST",Normal,FiscInvPrivateKey,false,PastePictureName);
      EditFieldTL(h,v+=vs,-20,"Parool",M4Star,Normal,200,FiscInvPassphrase,false,0);
      EditField(h,v+=vs,-160,"(Live) Host",Normal,FiscInvLiveHostName,false,0);
      EditField(-100,v,-20,"Port",Normal,FiscInvLivePort,false,0);
      EditField(h,v+=vs,-160,"Teekond",Normal,FiscInvLivePath,false,0);
      EditField(h,v+=vs,-160,"(Test) Host",Normal,FiscInvTestHostName,false,0);
      EditField(-100,v,-20,"Port",Normal,FiscInvTestPort,false,0);
      EditField(h,v+=vs,-160,"Teekond",Normal,FiscInvTestPath,false,0);
      CheckBox(h,v+=vs,0,"Ühenda testserveriga",FiscInvTestFlag);
      CheckBox(h,v+=vs,0,"E-arved saata",FiscInvSaveXMLFlag);
    end;
    if (HasLocalization("ARG,FIN,NOR,SWE")) then begin
      ButtonFrame(h=120,vm=(v=25),180,2,"");
      RadioButton(h,v,0,0,"Mitte aktiivne",OutEInvoices);
      RadioButton(h,v+=16,1,0,"Aktiivne",OutEInvoices);
      ButtonFrame(h,v+=40,180,4,"Vastuvõtmise eelistus");
      RadioButton(h,v,kEInvoiceRcvPreferenceDefault,0,"E-arved saata",RcvInvoicePref);
      RadioButton(h,v+=16,kEInvoiceRcvPreferenceElectronic,0,"",RcvInvoicePref);
      if (HasLocalization("FIN,NOR,SWE")==false) then begin
        RadioButton(h,v+=16,kEInvoiceRcvPreferencePaper,0,"Paberarved",RcvInvoicePref);
      end;
      RadioButton(h,v+=16,kEInvoiceRcvPreferenceNone,0,"Ei võta vastu",RcvInvoicePref);
      EndFrame;
      if (HasLocalization("FIN,NOR,SWE")==false) then begin
        CheckBox(h,v+=24,0,"Electronic Invoices with pdf Files",AttachPDFtoElectronicInvoice);
      end;
      CheckBox(h,v+=40,0,"Elektroonne andmevahetus peatatud",StopEInvoices);
      EditField(h,v+=20, -20,"Reason",Normal,StopReason,false,0);
    end;
    if (HasEInvoicing) then begin
      if (HasLocalization("ARG,EST,HRV,LTU,MEX")) then begin
        if (HasLocalization("ARG")) then begin
          Tile(tilenr,300,false,tilenr,Certificate);  tilenr = tilenr + 1;
          CheckBox(h=150,v=10,0,"Send Invoices electronically to AFIP",OutArgEInvoices);
//          CheckBox(h,v+=16,0,"Automatically assign Official Ser No.",AssignOfficialSerNr);
          tstr = "Stopped";
          if (TaskExistsRemote("SendEInvoice")) then begin
            tstr = "Running";
          end;
          v = v + vs;
          StaticText(h-60,v+18,tstr,false);
          HalPushButton(h,v,h+160,v+20,"RestartSendEInvoice","Send Electronic Invoices");
          EditField(h,v+=30,250,"Vastuvõtu eelistus",Normal,Certificate,false,PastePictureName);
          EditField(h,v+=vs,250,"LAT,EST",Normal,PrivateKey,false,PastePictureName);
          EditField(h,v+=vs,150,"Passphrase",Normal,Passphrase,false,0);
          EditField(h,v+=vs,50,"GMT Offset",Normal,GMTOffset,true,0);        
          EditField(h,v+=vs,150,"CAEA",ViewOnly,CAEA,false,0);
          HalPushButton(h+230,v,h+230+90,v+20,"EInvoiceTClassRequestCAEA","Request CAEA");
          EditField(h,v+=vs,70,"CAEA Start",ViewOnly,CAEAStartDate,false,0);
          EditField(h+150,v,70,"CAEA Expiry",ViewOnly,CAEAExpiryDate,false,0);
          EditField(h,v+=vs,150,"Last CAEA",ViewOnly,LastFortnightCAEA,false,0);
          EditField(h,v+=vs,70,"Last CAEA Start",ViewOnly,LastFortnightCAEAStartDate,false,0);
          EditField(h+150,v,70,"CAEA Expiry",ViewOnly,LastFortnightCAEAExpiryDate,false,0);
          EditField(h,v+=vs,150,"Previous CAEA",ViewOnly,ScdLastFortnightCAEA,false,0);
          EditField(h,v+=vs,70,"Previous CAEA Start",ViewOnly,ScdLastFortnightCAEAStartDate,false,0);
          EditField(h+150,v,70,"CAEA Expiry",ViewOnly,ScdLastFortnightCAEAExpiryDate,false,0);
          EditField(h,v+=vs,70,"Clear Login Ticket",Normal,ClearLoginTicketTime,false,PasteCurTime);
          CheckBox(h,v+=vs,0,"Send Export Invoices electronically to AFIP",SendExportIV);
          CheckBox(h,v+=16,0,"Self Billing",ArgSelfBilling);
          CheckBox(h,v+=16,0,"Send Plain Items as #Stocked# Items for Export Invoices",ExportIVSendPlainINasStockIN);
          CheckBox(h,v+=16,0,"Testi e-arveid (ainult testserveri jaoks)",TestFlag);
          if (HasMultiCurrency or HasBase2) then begin
            CheckBox(h,v+=16,0,"Domestic Invoice in Base1",DomesticInvoiceinBase1);
          end;
        end;
      end;
    end;
  /*    
    ButtonFrame(h2,v=vm,180,2,"Postage");
    RadioButton(h2,v,0,0,"Priority",Postage);
    RadioButton(h2,v+=16,1,0,"Economy",Postage);
*/
  end;
  EndWindow;
end;
